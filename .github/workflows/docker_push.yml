name: Tag and build docker image

on:
  push:
    branches:
    - main

jobs:
  tag_build:
    name: Tag Build if doesn't exist already
    runs-on: ubuntu-24.04
    permissions:
      contents: write
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Get version
        id: version
        run: echo "version=v$(cat VERSION)" >> $GITHUB_OUTPUT
      - name: Check If Tag already exists
        uses: mukunku/tag-exists-action@v1.6.0
        id: check-tag
        with: 
          tag: ${{ steps.version.outputs.version }}
      - run: echo "Tag exists!"
        if: steps.check-tag.outputs.exists == 'true'
      - name: Add tag
        id: tag-version
        if: steps.check-tag.outputs.exists != 'true'
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          custom_tag: ${{ steps.version.outputs.version }}
          tag_prefix: ''
  build_docker_tag:
    name: Build Docker Tag
    runs-on: ubuntu-24.04
    permissions:
      contents: read
    needs:
      - tag_build
    outputs:
      submajor_version: ${{ steps.fix-version.outputs.submajor_version }}
      full_version: ${{ steps.fix-full-version.outputs.full_version }}
    steps:
      - name: Fix version
        id: fix-version
        run: echo "submajor_version=$(echo ${{ needs.tag_build.outputs.version }} | sed -r 's/v([0-9]+)\.([0-9]+)\..*/\1\.\2/')" >> $GITHUB_OUTPUT
      - name: Fix full version
        id: fix-full-version
        run: echo "full_version=$(echo ${{ needs.tag_build.outputs.version }} | sed -r 's/^v//')" >> $GITHUB_OUTPUT
      - name: Echo submajor version
        id: echo-submajor
        run: echo "${{ steps.fix-version.outputs.submajor_version }}"
      - name: Echo full version
        id: echo-full
        run: echo "${{ steps.fix-full-version.outputs.full_version }}.${{ github.run_number }}"
  push_to_registry_amd:
    name: Push Docker AMD image to Docker
    runs-on: ubuntu-24.04
    permissions:
      contents: read
    needs:
      - tag_build
      - build_docker_tag
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to OCIR
        uses: docker/login-action@v3
        with:
          registry: sjc.ocir.io
          username: ${{ secrets.OCI_USERNAME }}
          password: ${{ secrets.OCI_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64
          push: true
          context: .
          tags: sjc.ocir.io/tnoff/magic-mirror:latest,sjc.ocir.io/tnoff/magic-mirror:${{ needs.build_docker_tag.outputs.submajor_version }},sjc.ocir.io/tnoff/magic-mirror:${{ needs.build_docker_tag.outputs.full_version }},sjc.ocir.io/tnoff/magic-mirror:${{ needs.build_docker_tag.outputs.full_version }}.${{ github.run_number }}
  push_to_registry_arm:
    name: Push Docker ARM image to Docker
    runs-on: ubuntu-24.04
    permissions:
      contents: read
    needs:
      - tag_build
      - build_docker_tag
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to OCIR
        uses: docker/login-action@v3
        with:
          registry: sjc.ocir.io
          username: ${{ secrets.OCI_USERNAME }}
          password: ${{ secrets.OCI_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64
          push: true
          context: .
          ttags: sjc.ocir.io/tnoff/magic-mirror:latest,sjc.ocir.io/tnoff/magic-mirror:${{ needs.build_docker_tag.outputs.submajor_version }},sjc.ocir.io/tnoff/magic-mirror:${{ needs.build_docker_tag.outputs.full_version }},sjc.ocir.io/tnoff/magic-mirror:${{ needs.build_docker_tag.outputs.full_version }}.${{ github.run_number }}